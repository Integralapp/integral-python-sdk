# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ....core.datetime_utils import serialize_datetime
from ...application_user.types.api_key import ApiKey
from ...application_user.types.application import Application
from ...application_user.types.application_base_url_endpoint import ApplicationBaseUrlEndpoint
from ...application_user.types.application_user import ApplicationUser


class Log(pydantic.BaseModel):
    id: str
    created_at: str = pydantic.Field(alias="createdAt")
    updated_at: str = pydantic.Field(alias="updatedAt")
    user: ApplicationUser
    application: Application
    user_api_key: typing.Optional[ApiKey] = pydantic.Field(alias="userApiKey")
    route: str
    method: str
    body: typing.Optional[typing.Dict[str, typing.Any]]
    headers: typing.Optional[typing.Dict[str, typing.Any]]
    ip: str
    is_sandbox: bool = pydantic.Field(alias="isSandbox")
    metadata: typing.Optional[typing.Dict[str, typing.Any]]
    version: typing.Optional[str]
    endpoint: typing.Optional[ApplicationBaseUrlEndpoint]
    response_status_code: typing.Optional[int] = pydantic.Field(alias="responseStatusCode")
    response_body: typing.Optional[typing.Dict[str, typing.Any]] = pydantic.Field(alias="responseBody")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
