# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class RotateTimings(str, enum.Enum):
    NOW = "now"
    ONE_HOUR = "1h"
    TWENTY_FOUR_HOURS = "24h"
    THREE_DAYS = "3d"
    SEVEN_DAYS = "7d"

    def visit(
        self,
        now: typing.Callable[[], T_Result],
        one_hour: typing.Callable[[], T_Result],
        twenty_four_hours: typing.Callable[[], T_Result],
        three_days: typing.Callable[[], T_Result],
        seven_days: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is RotateTimings.NOW:
            return now()
        if self is RotateTimings.ONE_HOUR:
            return one_hour()
        if self is RotateTimings.TWENTY_FOUR_HOURS:
            return twenty_four_hours()
        if self is RotateTimings.THREE_DAYS:
            return three_days()
        if self is RotateTimings.SEVEN_DAYS:
            return seven_days()
